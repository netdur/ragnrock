// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/search_query.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
    id: const obx_int.IdUid(3, 2357109046536361967),
    name: 'SearchQuery',
    lastPropertyId: const obx_int.IdUid(6, 864735195611292228),
    flags: 0,
    properties: <obx_int.ModelProperty>[
      obx_int.ModelProperty(
        id: const obx_int.IdUid(1, 8380901800987796294),
        name: 'id',
        type: 6,
        flags: 1,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(2, 3426103692134453647),
        name: 'originalQuery',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(3, 330254895527563206),
        name: 'timestamp',
        type: 10,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(4, 1857034872164217006),
        name: 'searchProvider',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(5, 921625418577026279),
        name: 'finalReport',
        type: 9,
        flags: 0,
      ),
      obx_int.ModelProperty(
        id: const obx_int.IdUid(6, 864735195611292228),
        name: 'lastStatus',
        type: 9,
        flags: 0,
      ),
    ],
    relations: <obx_int.ModelRelation>[],
    backlinks: <obx_int.ModelBacklink>[],
  ),
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore({
  String? directory,
  int? maxDBSizeInKB,
  int? maxDataSizeInKB,
  int? fileMode,
  int? maxReaders,
  bool queriesCaseSensitiveDefault = true,
  String? macosApplicationGroup,
}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(
    getObjectBoxModel(),
    directory: directory ?? (await defaultStoreDirectory()).path,
    maxDBSizeInKB: maxDBSizeInKB,
    maxDataSizeInKB: maxDataSizeInKB,
    fileMode: fileMode,
    maxReaders: maxReaders,
    queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
    macosApplicationGroup: macosApplicationGroup,
  );
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
    entities: _entities,
    lastEntityId: const obx_int.IdUid(4, 1378285450153570815),
    lastIndexId: const obx_int.IdUid(4, 1485194297465955892),
    lastRelationId: const obx_int.IdUid(0, 0),
    lastSequenceId: const obx_int.IdUid(0, 0),
    retiredEntityUids: const [
      248819125029628646,
      4281452424926013973,
      1378285450153570815,
    ],
    retiredIndexUids: const [],
    retiredPropertyUids: const [
      75683678060530133,
      8440291817710610506,
      8166319062608712385,
      2678250415113168506,
      7383595569376268148,
      2358018134040941372,
      8730467080898749808,
      7164081939796017692,
      5693567239779941202,
      7628021455036322874,
      7573079022130967120,
      7521254801818127495,
      6094308471935673544,
      80038622654192876,
      2078114779767279996,
      3318492447370312178,
      1486836003437492758,
      130197811620675451,
      8925083644132653813,
      2582685029196673172,
      4811985758764616327,
      6816571196644373294,
      1832107397980324653,
      287444031911587796,
    ],
    retiredRelationUids: const [],
    modelVersion: 5,
    modelVersionParserMinimum: 5,
    version: 1,
  );

  final bindings = <Type, obx_int.EntityDefinition>{
    SearchQuery: obx_int.EntityDefinition<SearchQuery>(
      model: _entities[0],
      toOneRelations: (SearchQuery object) => [],
      toManyRelations: (SearchQuery object) => {},
      getId: (SearchQuery object) => object.id,
      setId: (SearchQuery object, int id) {
        object.id = id;
      },
      objectToFB: (SearchQuery object, fb.Builder fbb) {
        final originalQueryOffset = fbb.writeString(object.originalQuery);
        final searchProviderOffset = fbb.writeString(object.searchProvider);
        final finalReportOffset = object.finalReport == null
            ? null
            : fbb.writeString(object.finalReport!);
        final lastStatusOffset = object.lastStatus == null
            ? null
            : fbb.writeString(object.lastStatus!);
        fbb.startTable(7);
        fbb.addInt64(0, object.id);
        fbb.addOffset(1, originalQueryOffset);
        fbb.addInt64(2, object.timestamp.millisecondsSinceEpoch);
        fbb.addOffset(3, searchProviderOffset);
        fbb.addOffset(4, finalReportOffset);
        fbb.addOffset(5, lastStatusOffset);
        fbb.finish(fbb.endTable());
        return object.id;
      },
      objectFromFB: (obx.Store store, ByteData fbData) {
        final buffer = fb.BufferContext(fbData);
        final rootOffset = buffer.derefObject(0);
        final idParam = const fb.Int64Reader().vTableGet(
          buffer,
          rootOffset,
          4,
          0,
        );
        final originalQueryParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 6, '');
        final timestampParam = DateTime.fromMillisecondsSinceEpoch(
          const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0),
        );
        final searchProviderParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGet(buffer, rootOffset, 10, '');
        final finalReportParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 12);
        final lastStatusParam = const fb.StringReader(
          asciiOptimization: true,
        ).vTableGetNullable(buffer, rootOffset, 14);
        final object = SearchQuery(
          id: idParam,
          originalQuery: originalQueryParam,
          timestamp: timestampParam,
          searchProvider: searchProviderParam,
          finalReport: finalReportParam,
          lastStatus: lastStatusParam,
        );

        return object;
      },
    ),
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [SearchQuery] entity fields to define ObjectBox queries.
class SearchQuery_ {
  /// See [SearchQuery.id].
  static final id = obx.QueryIntegerProperty<SearchQuery>(
    _entities[0].properties[0],
  );

  /// See [SearchQuery.originalQuery].
  static final originalQuery = obx.QueryStringProperty<SearchQuery>(
    _entities[0].properties[1],
  );

  /// See [SearchQuery.timestamp].
  static final timestamp = obx.QueryDateProperty<SearchQuery>(
    _entities[0].properties[2],
  );

  /// See [SearchQuery.searchProvider].
  static final searchProvider = obx.QueryStringProperty<SearchQuery>(
    _entities[0].properties[3],
  );

  /// See [SearchQuery.finalReport].
  static final finalReport = obx.QueryStringProperty<SearchQuery>(
    _entities[0].properties[4],
  );

  /// See [SearchQuery.lastStatus].
  static final lastStatus = obx.QueryStringProperty<SearchQuery>(
    _entities[0].properties[5],
  );
}
